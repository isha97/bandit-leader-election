number_requests     num_nodes       Algorithm       View_chages
20                  3               Deterministic   2
100                 5               Deterministic   11
100                 5               Deterministic   11

Init. Failure probability [0.15 0.7  0.15 0.95 0.7 ]
500 - 40
Init. Failure probability [0.15 0.7  0.15 0.95 0.7 ]
500 -37

500 - 30 Randomized LE
500 - 22

UCB LE
500 - 17

Estimates:
	True: 0.15 0.7  0.15 0.95 0.7
	Node 0: 0.12558503 0.25098696 0.01277482 0.61136248 0.48518642
	Node 1: 0.08001878 0.25662705 0.07915086 0.62817997 0.5013666
	Node 2: 0.03793454 0.22857307 0.06601121 0.62983588 0.33833676
	Node 3: 0.04167291 0.27336453 0.12261659 0.41351791 0.35899753
	Node 4: 0.08001878 0.25662705 0.07915086 0.62817997 0.5013666


Number of election rounds v/s number of requests (Deterministic, Randomized, Learning)
Number of messages transferred v/s number of requests
Number of election rounds v/s minimum fraction of failed nodes
Number of election rounds for uniform v/s imbalance
epsilon-greedy, UCB ,heuristic
number of nodes as factor



To Do:
1. Visualization
2. Uniform seeds
3. For randomized, set epsilon to 1

The paper will be graded on:

- How clearly it describes the main idea it is tackling (20 points)

- The depth of the related work section, and whether the paper places its work in the context of prior work properly (30 points)

- The experiments that are performed to validate the central idea (30 points)

Total Requests : {}, Number of Leader Elections : {} 2000 29
2022-05-01 00:16:13 INFO     [Client] run_node() Total Requests : 2000, Number of Leader Elections : 29 - Learning e-greedy


2022-04-30 22:59:58 INFO     [Client] run_node() Total Requests : 2000, Number of Leader Elections : 38 - Randomized LE


Total Requests : {}, Number of Leader Elections : {} 2000 34
2022-05-01 11:08:21 INFO     [Client] run_node() Total Requests : 2000, Number of Leader Elections : 34 - Deterministic


[0.95 0.15 0.15 0.7  0.15 0.15 0.15 0.15 0.15 0.15 0.15]
Total Requests : {}, Number of Leader Elections : {} 2000 83
2022-05-01 12:27:06 INFO     [Client] run_node() Total Requests : 2000, Number of Leader Elections : 83 - Deterministic 11 nodes

Total Requests : {}, Number of Leader Elections : {} 2000 64
2022-05-01 13:45:51 INFO     [Client] run_node() Total Requests : 2000, Number of Leader Elections : 64 : Learning based 11 nodes


Visualizations:
1. Avg time between view changes
2. Percentage improvement over prior methods versus # of nodes (5000 & 2000 requests, 5, 11, 23 nodes)
3. Candidates selected and their failure probability
4. Number of election rounds v/s minimum fraction of failed nodes
5. Number of election rounds for uniform v/s imbalance

Heuristic:
1. Penalty on nodes that were selected as leader but failed
2. Exploration based on failure probability
3. Resources & network bandwidth (use last n ping messages to communicate this information)